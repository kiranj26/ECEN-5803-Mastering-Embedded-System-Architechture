.TH "GPIO_Alternat_function_selection_define" 3 "Version 0.1.-" "Square Root Approximation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GPIO_Alternat_function_selection_define \- GPIO_Alternat_function_selection_define
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGPIO_AF_RTC_50Hz\fP   ((uint8_t)0x00)  /* RTC_50Hz Alternate Function mapping */"
.br
.RI "AF 0 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_MCO\fP   ((uint8_t)0x00)  /* MCO (MCO1 and MCO2) Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TAMPER\fP   ((uint8_t)0x00)  /* TAMPER (TAMPER_1 and TAMPER_2) Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_SWJ\fP   ((uint8_t)0x00)  /* SWJ (SWD and JTAG) Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TRACE\fP   ((uint8_t)0x00)  /* TRACE Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TIM1\fP   ((uint8_t)0x01)  /* TIM1 Alternate Function mapping */"
.br
.RI "AF 1 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_TIM2\fP   ((uint8_t)0x01)  /* TIM2 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TIM3\fP   ((uint8_t)0x02)  /* TIM3 Alternate Function mapping */"
.br
.RI "AF 2 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_TIM4\fP   ((uint8_t)0x02)  /* TIM4 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TIM5\fP   ((uint8_t)0x02)  /* TIM5 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TIM8\fP   ((uint8_t)0x03)  /* TIM8 Alternate Function mapping */"
.br
.RI "AF 3 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_TIM9\fP   ((uint8_t)0x03)  /* TIM9 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TIM10\fP   ((uint8_t)0x03)  /* TIM10 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TIM11\fP   ((uint8_t)0x03)  /* TIM11 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_I2C1\fP   ((uint8_t)0x04)  /* I2C1 Alternate Function mapping */"
.br
.RI "AF 4 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_I2C2\fP   ((uint8_t)0x04)  /* I2C2 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_I2C3\fP   ((uint8_t)0x04)  /* I2C3 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_SPI1\fP   ((uint8_t)0x05)  /* SPI1 Alternate Function mapping */"
.br
.RI "AF 5 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_SPI2\fP   ((uint8_t)0x05)  /* SPI2/I2S2 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_SPI3\fP   ((uint8_t)0x06)  /* SPI3/I2S3 Alternate Function mapping */"
.br
.RI "AF 6 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_USART1\fP   ((uint8_t)0x07)  /* USART1 Alternate Function mapping */"
.br
.RI "AF 7 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_USART2\fP   ((uint8_t)0x07)  /* USART2 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_USART3\fP   ((uint8_t)0x07)  /* USART3 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_I2S3ext\fP   ((uint8_t)0x07)  /* I2S3ext Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_UART4\fP   ((uint8_t)0x08)  /* UART4 Alternate Function mapping */"
.br
.RI "AF 8 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_UART5\fP   ((uint8_t)0x08)  /* UART5 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_USART6\fP   ((uint8_t)0x08)  /* USART6 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_CAN1\fP   ((uint8_t)0x09)  /* CAN1 Alternate Function mapping */"
.br
.RI "AF 9 selection\&. "
.ti -1c
.RI "#define \fBGPIO_AF_CAN2\fP   ((uint8_t)0x09)  /* CAN2 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TIM12\fP   ((uint8_t)0x09)  /* TIM12 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TIM13\fP   ((uint8_t)0x09)  /* TIM13 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_TIM14\fP   ((uint8_t)0x09)  /* TIM14 Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_OTG_FS\fP   ((uint8_t)0xA)  /* OTG_FS Alternate Function mapping */"
.br
.RI "AF 10 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_OTG_HS\fP   ((uint8_t)0xA)  /* OTG_HS Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_ETH\fP   ((uint8_t)0x0B)  /* ETHERNET Alternate Function mapping */"
.br
.RI "AF 11 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_FSMC\fP   ((uint8_t)0xC)  /* FSMC Alternate Function mapping */"
.br
.RI "AF 12 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_OTG_HS_FS\fP   ((uint8_t)0xC)  /* OTG HS configured in FS, Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_SDIO\fP   ((uint8_t)0xC)  /* SDIO Alternate Function mapping */"
.br
.ti -1c
.RI "#define \fBGPIO_AF_DCMI\fP   ((uint8_t)0x0D)  /* DCMI Alternate Function mapping */"
.br
.RI "AF 13 selection 
.br
 "
.ti -1c
.RI "#define \fBGPIO_AF_EVENTOUT\fP   ((uint8_t)0x0F)  /* EVENTOUT Alternate Function mapping */"
.br
.RI "AF 15 selection 
.br
 "
.ti -1c
.RI "#define \fBIS_GPIO_AF\fP(AF)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define GPIO_AF_CAN1   ((uint8_t)0x09)  /* CAN1 Alternate Function mapping */"

.PP
AF 9 selection\&. 
.SS "#define GPIO_AF_CAN2   ((uint8_t)0x09)  /* CAN2 Alternate Function mapping */"

.SS "#define GPIO_AF_DCMI   ((uint8_t)0x0D)  /* DCMI Alternate Function mapping */"

.PP
AF 13 selection 
.br
 
.SS "#define GPIO_AF_ETH   ((uint8_t)0x0B)  /* ETHERNET Alternate Function mapping */"

.PP
AF 11 selection 
.br
 
.SS "#define GPIO_AF_EVENTOUT   ((uint8_t)0x0F)  /* EVENTOUT Alternate Function mapping */"

.PP
AF 15 selection 
.br
 
.SS "#define GPIO_AF_FSMC   ((uint8_t)0xC)  /* FSMC Alternate Function mapping */"

.PP
AF 12 selection 
.br
 
.SS "#define GPIO_AF_I2C1   ((uint8_t)0x04)  /* I2C1 Alternate Function mapping */"

.PP
AF 4 selection 
.br
 
.SS "#define GPIO_AF_I2C2   ((uint8_t)0x04)  /* I2C2 Alternate Function mapping */"

.SS "#define GPIO_AF_I2C3   ((uint8_t)0x04)  /* I2C3 Alternate Function mapping */"

.SS "#define GPIO_AF_I2S3ext   ((uint8_t)0x07)  /* I2S3ext Alternate Function mapping */"

.SS "#define GPIO_AF_MCO   ((uint8_t)0x00)  /* MCO (MCO1 and MCO2) Alternate Function mapping */"

.SS "#define GPIO_AF_OTG_FS   ((uint8_t)0xA)  /* OTG_FS Alternate Function mapping */"

.PP
AF 10 selection 
.br
 
.SS "#define GPIO_AF_OTG_HS   ((uint8_t)0xA)  /* OTG_HS Alternate Function mapping */"

.SS "#define GPIO_AF_OTG_HS_FS   ((uint8_t)0xC)  /* OTG HS configured in FS, Alternate Function mapping */"

.SS "#define GPIO_AF_RTC_50Hz   ((uint8_t)0x00)  /* RTC_50Hz Alternate Function mapping */"

.PP
AF 0 selection 
.br
 
.SS "#define GPIO_AF_SDIO   ((uint8_t)0xC)  /* SDIO Alternate Function mapping */"

.SS "#define GPIO_AF_SPI1   ((uint8_t)0x05)  /* SPI1 Alternate Function mapping */"

.PP
AF 5 selection 
.br
 
.SS "#define GPIO_AF_SPI2   ((uint8_t)0x05)  /* SPI2/I2S2 Alternate Function mapping */"

.SS "#define GPIO_AF_SPI3   ((uint8_t)0x06)  /* SPI3/I2S3 Alternate Function mapping */"

.PP
AF 6 selection 
.br
 
.SS "#define GPIO_AF_SWJ   ((uint8_t)0x00)  /* SWJ (SWD and JTAG) Alternate Function mapping */"

.SS "#define GPIO_AF_TAMPER   ((uint8_t)0x00)  /* TAMPER (TAMPER_1 and TAMPER_2) Alternate Function mapping */"

.SS "#define GPIO_AF_TIM1   ((uint8_t)0x01)  /* TIM1 Alternate Function mapping */"

.PP
AF 1 selection 
.br
 
.SS "#define GPIO_AF_TIM10   ((uint8_t)0x03)  /* TIM10 Alternate Function mapping */"

.SS "#define GPIO_AF_TIM11   ((uint8_t)0x03)  /* TIM11 Alternate Function mapping */"

.SS "#define GPIO_AF_TIM12   ((uint8_t)0x09)  /* TIM12 Alternate Function mapping */"

.SS "#define GPIO_AF_TIM13   ((uint8_t)0x09)  /* TIM13 Alternate Function mapping */"

.SS "#define GPIO_AF_TIM14   ((uint8_t)0x09)  /* TIM14 Alternate Function mapping */"

.SS "#define GPIO_AF_TIM2   ((uint8_t)0x01)  /* TIM2 Alternate Function mapping */"

.SS "#define GPIO_AF_TIM3   ((uint8_t)0x02)  /* TIM3 Alternate Function mapping */"

.PP
AF 2 selection 
.br
 
.SS "#define GPIO_AF_TIM4   ((uint8_t)0x02)  /* TIM4 Alternate Function mapping */"

.SS "#define GPIO_AF_TIM5   ((uint8_t)0x02)  /* TIM5 Alternate Function mapping */"

.SS "#define GPIO_AF_TIM8   ((uint8_t)0x03)  /* TIM8 Alternate Function mapping */"

.PP
AF 3 selection 
.br
 
.SS "#define GPIO_AF_TIM9   ((uint8_t)0x03)  /* TIM9 Alternate Function mapping */"

.SS "#define GPIO_AF_TRACE   ((uint8_t)0x00)  /* TRACE Alternate Function mapping */"

.SS "#define GPIO_AF_UART4   ((uint8_t)0x08)  /* UART4 Alternate Function mapping */"

.PP
AF 8 selection 
.br
 
.SS "#define GPIO_AF_UART5   ((uint8_t)0x08)  /* UART5 Alternate Function mapping */"

.SS "#define GPIO_AF_USART1   ((uint8_t)0x07)  /* USART1 Alternate Function mapping */"

.PP
AF 7 selection 
.br
 
.SS "#define GPIO_AF_USART2   ((uint8_t)0x07)  /* USART2 Alternate Function mapping */"

.SS "#define GPIO_AF_USART3   ((uint8_t)0x07)  /* USART3 Alternate Function mapping */"

.SS "#define GPIO_AF_USART6   ((uint8_t)0x08)  /* USART6 Alternate Function mapping */"

.SS "#define IS_GPIO_AF(AF)"
\fBValue:\fP.PP
.nf
                          (((AF) == GPIO_AF_RTC_50Hz)  || ((AF) == GPIO_AF_TIM14)  || \\
                          ((AF) == GPIO_AF_MCO)       || ((AF) == GPIO_AF_TAMPER) || \\
                          ((AF) == GPIO_AF_SWJ)       || ((AF) == GPIO_AF_TRACE)  || \\
                          ((AF) == GPIO_AF_TIM1)      || ((AF) == GPIO_AF_TIM2)   || \\
                          ((AF) == GPIO_AF_TIM3)      || ((AF) == GPIO_AF_TIM4)   || \\
                          ((AF) == GPIO_AF_TIM5)      || ((AF) == GPIO_AF_TIM8)   || \\
                          ((AF) == GPIO_AF_I2C1)      || ((AF) == GPIO_AF_I2C2)   || \\
                          ((AF) == GPIO_AF_I2C3)      || ((AF) == GPIO_AF_SPI1)   || \\
                          ((AF) == GPIO_AF_SPI2)      || ((AF) == GPIO_AF_TIM13)  || \\
                          ((AF) == GPIO_AF_SPI3)      || ((AF) == GPIO_AF_TIM14)  || \\
                          ((AF) == GPIO_AF_USART1)    || ((AF) == GPIO_AF_USART2) || \\
                          ((AF) == GPIO_AF_USART3)    || ((AF) == GPIO_AF_UART4)  || \\
                          ((AF) == GPIO_AF_UART5)     || ((AF) == GPIO_AF_USART6) || \\
                          ((AF) == GPIO_AF_CAN1)      || ((AF) == GPIO_AF_CAN2)   || \\
                          ((AF) == GPIO_AF_OTG_FS)    || ((AF) == GPIO_AF_OTG_HS) || \\
                          ((AF) == GPIO_AF_ETH)       || ((AF) == GPIO_AF_FSMC)   || \\
                          ((AF) == GPIO_AF_OTG_HS_FS) || ((AF) == GPIO_AF_SDIO)   || \\
                          ((AF) == GPIO_AF_DCMI)      || ((AF) == GPIO_AF_EVENTOUT))
.fi

.SH "Author"
.PP 
Generated automatically by Doxygen for Square Root Approximation from the source code\&.
